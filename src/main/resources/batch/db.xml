<?xml version="1.0" encoding="UTF-8"?>
<!--
データベース接続用の設定ファイル
-->
<component-configuration
    xmlns="http://tis.co.jp/nablarch/component-configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://tis.co.jp/nablarch/component-configuration ../component-configuration.xsd">

  <!-- データベース接続用設定 -->
  <component name="connectionFactory"
      class="nablarch.core.db.connection.BasicDbConnectionFactoryForDataSource">
    <property name="dataSource" ref="dataSource" />
    <property name="statementFactory" ref="statementFactory" />
    <property name="dbAccessExceptionFactory" ref="dbAccessExceptionFactory" />
  </component>

  <component name="dbAccessExceptionFactory" class="nablarch.core.db.connection.exception.BasicDbAccessExceptionFactory" />

  <!-- データソース設定 -->
  <component name="dataSource" class="oracle.ucp.jdbc.PoolDataSourceImpl">
    <property name="connectionFactoryClassName"
        value="oracle.jdbc.pool.OracleDataSource" />
    <property name="user" value="${db.user}" />
    <property name="password" value="${db.password}" />
    <property name="URL" value="${db.url}" />
    <property name="maxStatements" value="50" />
    <property name="maxPoolSize" value="10" />
    <property name="initialPoolSize" value="2" />
  </component>

  <!-- データベーストランザクション用設定 -->
  <component name="transactionFactory"
      class="nablarch.core.db.transaction.JdbcTransactionFactory" />

  <!-- SQL文実行時例外用の設定 -->
  <component name="statementExceptionFactory"
      class="nablarch.core.db.statement.exception.BasicSqlStatementExceptionFactory" />

  <!-- ステートメントの設定 -->
  <component name="statementFactory"
      class="nablarch.core.db.statement.BasicStatementFactory">
    <property name="fetchSize" value="50" />
    <property name="queryTimeout" value="600" />
    <property name="objectFieldCache" ref="statementValueObjectCache" />
    <property name="updatePreHookObjectHandlerList"
        ref="fieldAnnotationHandler" />
    <property name="sqlParameterParserFactory">
      <component
          class="nablarch.core.db.statement.BasicSqlParameterParserFactory" />
    </property>
    <property name="sqlStatementExceptionFactory" ref="statementExceptionFactory" />
    <property name="sqlLoader" ref="sqlLoader">
    </property>
  </component>

  <!-- SQLLoaderの設定 -->
  <component name="sqlLoader" class="nablarch.core.db.statement.BasicSqlLoader">
    <property name="fileEncoding" value="utf-8" />
    <property name="extension" value="sql" />
  </component>

  <!-- オブジェクトの情報のキャッシュ設定 -->
  <component name="statementValueObjectCache"
      class="nablarch.core.cache.BasicStaticDataCache">
    <property name="loader">
      <component
          class="nablarch.core.db.statement.autoproperty.FieldAndAnnotationLoader" />
    </property>
    <property name="loadOnStartup" value="false" />
  </component>

  <!-- 現在日時設定ハンドラ -->
  <component name="currentDateTimeAnnotationHandler"
      class="nablarch.core.db.statement.autoproperty.CurrentDateTimeAnnotationHandler">
    <property name="dateProvider" ref="systemTimeProvider" />
    <property name="dateFormat" value="yyyyMMdd" />
    <property name="fieldAnnotationCache" ref="statementValueObjectCache" />
  </component>

  <!-- ユーザID設定ハンドラ -->
  <component name="userIdAnnotationHandler"
      class="nablarch.core.db.statement.autoproperty.UserIdAnnotationHandler">
    <property name="fieldAnnotationCache" ref="statementValueObjectCache" />
  </component>

  <!-- リクエストID設定ハンドラ -->
  <component name="requestIdAnnotationHandler"
      class="nablarch.core.db.statement.autoproperty.RequestIdAnnotationHandler">
    <property name="fieldAnnotationCache" ref="statementValueObjectCache" />
  </component>

  <!-- 実行時ID設定ハンドラ -->
  <component name="executionIdAnnotationHandler"
      class="please.change.me.core.db.statement.autoproperty.ExecutionIdAnnotationHandler">
    <property name="fieldAnnotationCache" ref="statementValueObjectCache" />
  </component>

  <!-- フィールドアノテーションハンドラの設定 -->
  <list name="fieldAnnotationHandler">
    <component-ref name="currentDateTimeAnnotationHandler" />
    <component-ref name="userIdAnnotationHandler" />
    <component-ref name="requestIdAnnotationHandler" />
    <component-ref name="executionIdAnnotationHandler" />
  </list>

  <!-- デフォルトのデータベーストランザクション管理クラスの設定 -->
  <component name="defaultDbTransactionManager"
      class="nablarch.core.db.transaction.SimpleDbTransactionManager">
    <property name="connectionFactory" ref="connectionFactory" />
    <property name="transactionFactory" ref="transactionFactory" />
  </component>

</component-configuration>

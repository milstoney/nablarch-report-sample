<?xml version="1.0" encoding="UTF-8"?>
<!--
ハンドラの設定ファイル

※チュートリアルでは、画面オンライン実行制御基盤とHTTPメッセージング実行制御基盤を同一サーバ上で動作させているため
　本来のハンドラ構成とは異なる部分があります。
　各プロジェクトにて設定ファイルを作成する際には、解説書に記載されているハンドラ構成を参考にしてください。

-->
<component-configuration
        xmlns="http://tis.co.jp/nablarch/component-configuration"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://tis.co.jp/nablarch/component-configuration  ../component-configuration.xsd">

  <!-- Nablarchタグのハンドラ -->
  <import file="web/handler/nablarchTag.xml"/>
  <!-- スレッドコンテキストに保持される共通属性を管理するハンドラ -->
  <import file="web/handler/threadcontext.xml"/>
  <!-- ログ出力ハンドラ -->
  <import file="web/handler/log.xml"/>
  <!-- データベース接続ハンドラ -->
  <import file="web/handler/db.xml"/>
  <!-- 認可判定を行うハンドラ -->
  <import file="web/handler/permissionCheck.xml"/>
  <!-- WEBサービス提供可否状態を判定するハンドラ -->
  <import file="web/handler/serviceAvailability.xml"/>
  <!-- エラーハンドラ -->
  <import file="web/handler/error.xml"/>
  <!-- セッション並行アクセス制御ハンドラ -->
  <import file="web/handler/sessionConcurrentAccess.xml"/>

  <!-- パッケージマッピングの設定 -->
  <component name="packageMapping"
              class="nablarch.fw.web.handler.HttpRequestJavaPackageMapping">
    <property name="baseUri" value="/action/"/>
    <property name="basePackage" value="please.change.me.sample"/>
  </component>

  <!-- スタイルシートマッピングの設定 -->
  <component name="cssMapping"
              class="nablarch.fw.web.handler.ResourceMapping">
    <property name="baseUri" value="/"/>
    <property name="basePath" value="servlet:///"/>
  </component>

  <!-- javascriptマッピングの設定 -->
  <component name="jsMapping"
              class="nablarch.fw.web.handler.ResourceMapping">
    <property name="baseUri" value="/"/>
    <property name="basePath" value="servlet:///"/>
  </component>

  <!-- jpgマッピングの設定 -->
  <component name="jpgMapping"
              class="nablarch.fw.web.handler.ResourceMapping">
    <property name="baseUri" value="/"/>
    <property name="basePath" value="servlet:///"/>
  </component>

  <component name="pngMapping"
      class="nablarch.fw.web.handler.ResourceMapping">
    <property name="baseUri" value="/"/>
    <property name="basePath" value="servlet:///"/>
  </component>

  <!-- 国際化対応ハンドラ -->
  <component name="i18nHandler" class="please.change.me.sample.handler.I18nHandler"/>
  
  <!-- 画面表示処理に必要な共通処理を行うハンドラ -->
  <component name="viewHandler" class="please.change.me.sample.handler.ViewHandler"/>
  
  <!-- リクエストパスベースディスパッチハンドラ -->
  <component name="requestMapping"
             class="nablarch.fw.handler.RequestPathJavaPackageMapping">
    <property name="basePath"        value="/msgaction"/>
    <property name="basePackage"     value="please.change.me.sample"/>
    <property name="classNameSuffix" value="Action" />
    <property name="immediate"       value="false" />
  </component>
  
  <!-- ハンドラキュー構成 -->
  <component name="webFrontController"
              class="nablarch.fw.web.servlet.WebFrontController">

    <property name="handlerQueue">
      <list>
        <component class="nablarch.fw.handler.GlobalErrorHandler"/>
        <component class="nablarch.common.io.FileRecordWriterDisposeHandler" />
        <component-ref name="sessionConcurrentAccessHandler"/>
        <component class="nablarch.fw.web.handler.HttpResponseHandler"/>

        <component-ref name="threadContextHandler"/>

        <component-ref name="httpAccessLogHandler"/>
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/action//"/>
          <property name="handler" ref="viewHandler"/>
        </component>

        <component class="nablarch.fw.web.handler.ForwardingHandler"/>

        <component-ref name="errorHandler"/>
        
        <component-ref name="multipartHandler"/>
        
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/action//"/>
          <property name="handler" ref="nablarchTagHandler"/>
        </component>

        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/action//"/>
          <property name="handler" ref="i18nHandler"/>
        </component>

        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/action//"/>
          <property name="handler" ref="dbConnectionManagementHandler"/>
        </component>

        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/action//"/>
          <property name="handler" ref="transactionManagementHandler"/>
        </component>

        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/action//"/>
          <property name="handler" ref="serviceAvailabilityCheckHandler"/>
        </component>

        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/action//"/>
          <property name="handler" ref="permissionCheckHandler"/>
        </component>

        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/action//"/>
          <property name="handler" ref="packageMapping"/>
        </component>

        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="//*.css"/>
          <property name="handler" ref="cssMapping"/>
        </component>
        
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="//*.less"/>
          <property name="handler" ref="cssMapping"/>
        </component>
        
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="//*.template"/>
          <property name="handler" ref="jsMapping"/>
        </component>        
        
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="//*.js"/>
          <property name="handler" ref="jsMapping"/>
        </component>

        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="//*.jpg"/>
          <property name="handler" ref="jpgMapping"/>
        </component>
        
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="//*.png"/>
          <property name="handler" ref="pngMapping"/>
        </component>
               
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="//*.eot"/>
          <property name="handler" ref="pngMapping"/>
        </component>
        
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="//*.woff"/>
          <property name="handler" ref="pngMapping"/>
        </component>
        
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="//*.ttf"/>
          <property name="handler" ref="pngMapping"/>
        </component>
        
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="//*.svg"/>
          <property name="handler" ref="pngMapping"/>
        </component>
        
        
        
        <!--===============================================================
                    以下、HTTPメッセージング用ハンドラ
        =================================================================-->
        <!-- HTTPメッセージングエラー制御ハンドラ -->
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/msgaction//"/>
          <property name="handler" ref="messagingErrorHandler"/>
        </component>
        <!-- 開閉局制御ハンドラ -->
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/msgaction//"/>
          <property name="handler" ref="serviceAvailabilityCheckHandler"/>
        </component>
        <!-- リクエストパスベースディスパッチハンドラ -->
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/msgaction//"/>
          <property name="handler" ref="requestMapping"/>
        </component>

        <!-- 認可判定ハンドラ -->
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/RM*"/>
          <property name="handler" ref="permissionCheckHandler"/>
        </component>
        
        <!-- データベース接続管理ハンドラ-->
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/RM*"/>
          <property name="handler" ref="dbConnectionManagementHandler"/>
        </component>
        <!-- トランザクション制御ハンドラ -->
        <component class="nablarch.fw.RequestHandlerEntry">
          <property name="requestPattern" value="/RM*"/>
          <property name="handler" ref="transactionManagementHandler"/>
        </component>

      </list>
    </property>
  </component>

  <component class="nablarch.fw.web.upload.MultipartHandler" name="multipartHandler">
    <property name="uploadSettings">
      <component class="nablarch.fw.web.upload.UploadSettings">
        <property name="autoCleaning" value="false" />
        <property name="contentLengthLimit" value="1000000"/>
      </component>
    </property>
  </component>
</component-configuration>

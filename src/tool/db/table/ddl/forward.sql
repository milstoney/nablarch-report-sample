CREATE TABLE ID_GENERATE
(
    ID                             CHAR(4) NOT NULL,
    NO                             NUMBER(10,0) NOT NULL,
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE ID_GENERATE
    ADD(PRIMARY KEY (ID) USING INDEX)
;
CREATE TABLE UGROUP_SYSTEM_ACCOUNT
(
    USER_ID                        CHAR(10) NOT NULL,
    UGROUP_ID                      CHAR(10) NOT NULL,
    EFFECTIVE_DATE_FROM            CHAR(8) NOT NULL,
    EFFECTIVE_DATE_TO              CHAR(8) NOT NULL,
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE UGROUP_SYSTEM_ACCOUNT
    ADD(PRIMARY KEY (USER_ID, UGROUP_ID, EFFECTIVE_DATE_FROM) USING INDEX)
;
CREATE TABLE UGROUP
(
    UGROUP_ID                      CHAR(10) NOT NULL,
    UGROUP_NAME                    NVARCHAR2(50) NOT NULL,
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE UGROUP
    ADD(PRIMARY KEY (UGROUP_ID) USING INDEX)
;
CREATE TABLE UGROUP_AUTHORITY
(
    UGROUP_ID                      CHAR(10) NOT NULL,
    PERMISSION_UNIT_ID             CHAR(10) NOT NULL,
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE UGROUP_AUTHORITY
    ADD(PRIMARY KEY (UGROUP_ID, PERMISSION_UNIT_ID) USING INDEX)
;
CREATE TABLE PERMISSION_UNIT
(
    PERMISSION_UNIT_ID             CHAR(10) NOT NULL,
    PERMISSION_UNIT_NAME           NVARCHAR2(100) NOT NULL,
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE PERMISSION_UNIT
    ADD(PRIMARY KEY (PERMISSION_UNIT_ID) USING INDEX)
;
CREATE TABLE PERMISSION_UNIT_REQUEST
(
    REQUEST_ID                     CHAR(10) NOT NULL,
    PERMISSION_UNIT_ID             CHAR(10) NOT NULL,
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE PERMISSION_UNIT_REQUEST
    ADD(PRIMARY KEY (REQUEST_ID, PERMISSION_UNIT_ID) USING INDEX)
;
CREATE TABLE REQUEST
(
    REQUEST_ID                     CHAR(10) NOT NULL,
    REQUEST_NAME                   NVARCHAR2(100) NOT NULL,
    SERVICE_AVAILABLE              CHAR(1) NOT NULL,
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE REQUEST
    ADD(PRIMARY KEY (REQUEST_ID) USING INDEX)
;
CREATE TABLE SYSTEM_ACCOUNT
(
    USER_ID                        CHAR(10) NOT NULL,
    LOGIN_ID                       NVARCHAR2(20) NOT NULL,
    PASSWORD                       NVARCHAR2(44) NOT NULL,
    USER_ID_LOCKED                 CHAR(1) NOT NULL,
    PASSWORD_EXPIRATION_DATE       CHAR(8) NOT NULL,
    FAILED_COUNT                   NUMBER(1,0) NOT NULL,
    EFFECTIVE_DATE_FROM            CHAR(8) NOT NULL,
    EFFECTIVE_DATE_TO              CHAR(8) NOT NULL,
    LAST_LOGIN_DATE_TIME           TIMESTAMP,
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL,
    VERSION                        NUMBER(10,0) DEFAULT 1 NOT NULL
)
;
ALTER TABLE SYSTEM_ACCOUNT
    ADD(PRIMARY KEY (USER_ID) USING INDEX)
;
ALTER TABLE SYSTEM_ACCOUNT
    ADD(CONSTRAINT UQ_SYSTEM_ACCOUNT_LOGIN_ID UNIQUE (LOGIN_ID) USING INDEX)
;
CREATE TABLE SYSTEM_ACCOUNT_AUTHORITY
(
    USER_ID                        CHAR(10) NOT NULL,
    PERMISSION_UNIT_ID             CHAR(10) NOT NULL,
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE SYSTEM_ACCOUNT_AUTHORITY
    ADD(PRIMARY KEY (USER_ID, PERMISSION_UNIT_ID) USING INDEX)
;
CREATE TABLE USERS
(
    USER_ID                        CHAR(10) NOT NULL,
    KANJI_NAME                     NVARCHAR2(50) NOT NULL,
    KANA_NAME                      NVARCHAR2(50) NOT NULL,
    MAIL_ADDRESS                   NVARCHAR2(100) NOT NULL,
    EXTENSION_NUMBER_BUILDING      NVARCHAR2(2) NOT NULL,
    EXTENSION_NUMBER_PERSONAL      NVARCHAR2(4) NOT NULL,
    MOBILE_PHONE_NUMBER_SBSCR_CODE NVARCHAR2(4),
    MOBILE_PHONE_NUMBER_AREA_CODE  NVARCHAR2(3),
    MOBILE_PHONE_NUMBER_CITY_CODE  NVARCHAR2(4),
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE USERS
    ADD(PRIMARY KEY (USER_ID) USING INDEX)
;
CREATE TABLE MESSAGE
(
    MESSAGE_ID                     VARCHAR2(10) NOT NULL,
    LANG                           CHAR(2) NOT NULL,
    MESSAGE                        NVARCHAR2(200) NOT NULL,
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE MESSAGE
    ADD(PRIMARY KEY (MESSAGE_ID, LANG) USING INDEX)
;
CREATE TABLE BUSINESS_DATE
(
    SEGMENT                        CHAR(2) NOT NULL,
    BIZ_DATE                       CHAR(8) NOT NULL,
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE BUSINESS_DATE ADD CONSTRAINT PK_BUSINESS_DATE
    PRIMARY KEY (SEGMENT)
;
CREATE TABLE CODE_PATTERN
(
    ID                             CHAR(8) NOT NULL,
    VALUE                          NVARCHAR2(2) NOT NULL,
    PATTERN01                      CHAR(1) NOT NULL,
    PATTERN02                      CHAR(1),
    PATTERN03                      CHAR(1),
    PATTERN04                      CHAR(1),
    PATTERN05                      CHAR(1),
    PATTERN06                      CHAR(1),
    PATTERN07                      CHAR(1),
    PATTERN08                      CHAR(1),
    PATTERN09                      CHAR(1),
    PATTERN10                      CHAR(1),
    PATTERN11                      CHAR(1),
    PATTERN12                      CHAR(1),
    PATTERN13                      CHAR(1),
    PATTERN14                      CHAR(1),
    PATTERN15                      CHAR(1),
    PATTERN16                      CHAR(1),
    PATTERN17                      CHAR(1),
    PATTERN18                      CHAR(1),
    PATTERN19                      CHAR(1),
    PATTERN20                      CHAR(1),
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE CODE_PATTERN
    ADD(PRIMARY KEY (ID, VALUE) USING INDEX)
;
CREATE TABLE CODE_NAME
(
    ID                             CHAR(8) NOT NULL,
    VALUE                          NVARCHAR2(2) NOT NULL,
    LANG                           CHAR(2) NOT NULL,
    SORT_ORDER                     NUMBER(2,0) NOT NULL,
    NAME                           NVARCHAR2(50) NOT NULL,
    SHORT_NAME                     NVARCHAR2(50),
    OPTION01                       NVARCHAR2(50),
    OPTION02                       NVARCHAR2(50),
    OPTION03                       NVARCHAR2(50),
    OPTION04                       NVARCHAR2(50),
    OPTION05                       NVARCHAR2(50),
    OPTION06                       NVARCHAR2(50),
    OPTION07                       NVARCHAR2(50),
    OPTION08                       NVARCHAR2(50),
    OPTION09                       NVARCHAR2(50),
    OPTION10                       VARCHAR2(50),
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE CODE_NAME
    ADD(PRIMARY KEY (ID, VALUE, LANG) USING INDEX)
;

CREATE TABLE DELETE_USER_REPORT_TEMP
(
    USER_ID                         CHAR(10) NOT NULL,
    LOGIN_ID                        NVARCHAR2(20) NOT NULL,
    KANJI_NAME                      NVARCHAR2(50) NOT NULL,
    KANA_NAME                       NVARCHAR2(50) NOT NULL,
    MAIL_ADDRESS                    NVARCHAR2(100) NOT NULL,
    EXTENSION_NUMBER_BUILDING       NVARCHAR2(2) NOT NULL,
    EXTENSION_NUMBER_PERSONAL       NVARCHAR2(4) NOT NULL,
    MOBILE_PHONE_NUMBER_AREA_CODE   NVARCHAR2(3),
    MOBILE_PHONE_NUMBER_CITY_CODE   NVARCHAR2(4),
    MOBILE_PHONE_NUMBER_SBSCR_CODE  NVARCHAR2(4),
    INSERT_USER_ID                 CHAR(10) NOT NULL,
    INSERT_DATE                    TIMESTAMP NOT NULL,
    UPDATED_USER_ID                CHAR(10) NOT NULL,
    UPDATED_DATE                   TIMESTAMP NOT NULL
)
;
ALTER TABLE DELETE_USER_REPORT_TEMP
        ADD(PRIMARY KEY (USER_ID) USING INDEX)
;

CREATE TABLE BATCH_REQUEST
(
    REQUEST_ID                      CHAR(10) NOT NULL,
    REQUEST_NAME                    NVARCHAR2(100) NOT NULL,
    PROCESS_HALT_FLG                CHAR(1) NOT NULL,
    PROCESS_ACTIVE_FLG              CHAR(1) NOT NULL,
    SERVICE_AVAILABLE               CHAR(1) NOT NULL,
    RESUME_POINT                    NUMBER(10) NOT NULL
)
;
ALTER TABLE BATCH_REQUEST
        ADD(PRIMARY KEY (REQUEST_ID) USING INDEX)
;
CREATE TABLE USER_INFO_TEMP
(
    USER_INFO_ID                    CHAR(20) NOT NULL,
    LOGIN_ID                        NVARCHAR2(20) NOT NULL,
    KANJI_NAME                      NVARCHAR2(50) NOT NULL,
    KANA_NAME                       NVARCHAR2(50) NOT NULL,
    MAIL_ADDRESS                    NVARCHAR2(100) NOT NULL,
    EXTENSION_NUMBER_BUILDING       NVARCHAR2(2) NOT NULL,
    EXTENSION_NUMBER_PERSONAL       NVARCHAR2(4) NOT NULL,
    MOBILE_PHONE_NUMBER_AREA_CODE   NVARCHAR2(3),
    MOBILE_PHONE_NUMBER_CITY_CODE   NVARCHAR2(4),
    MOBILE_PHONE_NUMBER_SBSCR_CODE  NVARCHAR2(4),
    STATUS                          CHAR (1) NOT NULL ,
    INSERT_USER_ID                  CHAR(10) NOT NULL,
    INSERT_DATE                     TIMESTAMP NOT NULL,
    INSERT_REQUEST_ID               CHAR(10) NOT NULL,
    INSERT_EXECUTION_ID             CHAR(29) NOT NULL,
    UPDATED_USER_ID                 CHAR(10) NOT NULL,
    UPDATED_DATE                    TIMESTAMP NOT NULL
)
;
ALTER TABLE USER_INFO_TEMP
ADD(PRIMARY KEY (USER_INFO_ID) USING INDEX)
;
CREATE TABLE USER_INFO_RECEIVE_MESSAGE
(
    RECEIVED_MESSAGE_SEQUENCE       CHAR(10) NOT NULL,
    LOGIN_ID                        NVARCHAR2(20) NOT NULL,
    KANJI_NAME                      NVARCHAR2(50) NOT NULL,
    KANA_NAME                       NVARCHAR2(50) NOT NULL,
    MAIL_ADDRESS                    NVARCHAR2(100) NOT NULL,
    EXTENSION_NUMBER_BUILDING       NVARCHAR2(2) NOT NULL,
    EXTENSION_NUMBER_PERSONAL       NVARCHAR2(4) NOT NULL,
    MOBILE_PHONE_NUMBER_AREA_CODE   NVARCHAR2(3),
    MOBILE_PHONE_NUMBER_CITY_CODE   NVARCHAR2(4),
    MOBILE_PHONE_NUMBER_SBSCR_CODE  NVARCHAR2(4),
    STATUS                          CHAR (1) NOT NULL ,
    INSERT_USER_ID                  CHAR(10) NOT NULL,
    INSERT_DATE                     TIMESTAMP NOT NULL,
    INSERT_REQUEST_ID               CHAR(10) NOT NULL,
    INSERT_EXECUTION_ID             CHAR(29) NOT NULL,
    UPDATED_USER_ID                 CHAR(10) NOT NULL,
    UPDATED_DATE                    TIMESTAMP NOT NULL
)
;
ALTER TABLE USER_INFO_RECEIVE_MESSAGE
ADD(PRIMARY KEY (RECEIVED_MESSAGE_SEQUENCE) USING INDEX)
;

CREATE TABLE MAIL_REQUEST
(
    MAIL_REQUEST_ID                NVARCHAR2(20) NOT NULL,
    SUBJECT                        NVARCHAR2(150) NOT NULL,
    MAIL_FROM                      NVARCHAR2(100) NOT NULL,
    REPLY_TO                       NVARCHAR2(100) NOT NULL,
    RETURN_PATH                    NVARCHAR2(100) NOT NULL,
    CHARSET                        NVARCHAR2(50) NOT NULL,
    STATUS                         CHAR(1) NOT NULL,
    REQUEST_DATETIME               TIMESTAMP NOT NULL,
    SEND_DATETIME                  TIMESTAMP,
    MAIL_BODY                      NCLOB NOT NULL
)
;
ALTER TABLE MAIL_REQUEST
    ADD(PRIMARY KEY (MAIL_REQUEST_ID) USING INDEX)
;
CREATE TABLE MAIL_ATTACHED_FILE
(
    MAIL_REQUEST_ID                NVARCHAR2(20) NOT NULL,
    SERIAL_NUMBER                  NUMBER(10,0) NOT NULL,
    FILE_NAME                      NVARCHAR2(150) NOT NULL,
    CONTENT_TYPE                   NVARCHAR2(50) NOT NULL,
    ATTACHED_FILE                  BLOB NOT NULL
)
;
ALTER TABLE MAIL_ATTACHED_FILE
    ADD(PRIMARY KEY (MAIL_REQUEST_ID, SERIAL_NUMBER) USING INDEX)
;
CREATE TABLE MAIL_RECIPIENT
(
    MAIL_REQUEST_ID                NVARCHAR2(20) NOT NULL,
    SERIAL_NUMBER                  NUMBER(10,0) NOT NULL,
    RECIPIENT_TYPE                 CHAR(1) NOT NULL,
    MAIL_ADDRESS                   NVARCHAR2(100) NOT NULL
)
;
ALTER TABLE MAIL_RECIPIENT
    ADD(PRIMARY KEY (MAIL_REQUEST_ID, SERIAL_NUMBER) USING INDEX)
;
CREATE TABLE MAIL_TEMPLATE
(
    MAIL_TEMPLATE_ID               NVARCHAR2(10) NOT NULL,
    LANG                           CHAR(2) NOT NULL,
    SUBJECT                        NVARCHAR2(150) NOT NULL,
    CHARSET                        NVARCHAR2(50) NOT NULL,
    MAIL_BODY                      CLOB NOT NULL
)
;
ALTER TABLE MAIL_TEMPLATE
    ADD(PRIMARY KEY (MAIL_TEMPLATE_ID, LANG) USING INDEX)
;

CREATE TABLE DELETE_USER_SEND_MESSAGE (
    SEND_MESSAGE_SEQUENCE           CHAR(10) NOT NULL,
    USER_ID                         CHAR(10) NOT NULL,
    KANJI_NAME                      NVARCHAR2(50) NOT NULL,
    KANA_NAME                       NVARCHAR2(50) NOT NULL,
    STATUS                          CHAR (1) NOT NULL ,
    INSERT_USER_ID                  CHAR(10) NOT NULL,
    INSERT_DATE                     TIMESTAMP NOT NULL,
    INSERT_REQUEST_ID               CHAR(10) NOT NULL,
    INSERT_EXECUTION_ID             CHAR(29) NOT NULL,
    UPDATED_USER_ID                 CHAR(10) NOT NULL,
    UPDATED_DATE                    TIMESTAMP NOT NULL
)
;
ALTER TABLE DELETE_USER_SEND_MESSAGE
    ADD(PRIMARY KEY (SEND_MESSAGE_SEQUENCE) USING INDEX)
;

CREATE TABLE SENT_MESSAGE (
    MESSAGE_ID                      NVARCHAR2(64) NOT NULL,
    REQUEST_ID                      NVARCHAR2(64) NOT NULL,
    REPLY_QUEUE                     NVARCHAR2(64) DEFAULT '' NOT NULL,
    STATUS_CODE                     CHAR(4) DEFAULT '' NOT NULL,
    BODY_DATA                       BLOB
)
;
ALTER TABLE SENT_MESSAGE
    ADD(PRIMARY KEY (MESSAGE_ID, REQUEST_ID) USING INDEX)
;

CREATE TABLE VALIDATION_SAMPLE_INFO
(
    VALIDATION_SAMPLE_ID            CHAR(10) NOT NULL,
    PHONE_NUMBER                    NVARCHAR2(13),
    PHONE_NUMBER_AREA_CODE          NVARCHAR2(4),
    PHONE_NUMBER_CITY_CODE          NVARCHAR2(4),
    PHONE_NUMBER_SBSCR_CODE         NVARCHAR2(4),
    STRING_DATE                     NVARCHAR2(8)
)
;

ALTER TABLE VALIDATION_SAMPLE_INFO
    ADD(PRIMARY KEY (VALIDATION_SAMPLE_ID) USING INDEX);
    
CREATE TABLE FORMATTER_SAMPLE_INFO
(
    FORMATTER_SAMPLE_ID             CHAR(10) NOT NULL,
    STRING_DATE                     NVARCHAR2(8),
    DECIMAL_NUMBER                  NUMBER(10),
    DATE_TIME                       DATE
)
;

ALTER TABLE FORMATTER_SAMPLE_INFO
    ADD(PRIMARY KEY (FORMATTER_SAMPLE_ID) USING INDEX);

CREATE TABLE IMG_FILE_INFO
(
    IMG_FILE_INFO_ID   CHAR(10) NOT NULL,
    IMG_FILE_NAME NVARCHAR2(50) NOT NULL
)
;

ALTER TABLE IMG_FILE_INFO
    ADD(PRIMARY KEY (IMG_FILE_INFO_ID) USING INDEX);

CREATE SEQUENCE USER_ID_SEQ
    START WITH 1000
    INCREMENT By 1
    MINVALUE 1000
    MAXVALUE 9999999999
    NOCYCLE
    CACHE 20
    NOORDER;
    
CREATE SEQUENCE USER_INFO_ID_SEQ
    START WITH 1000
    INCREMENT By 1
    MINVALUE 1000
    MAXVALUE 99999999999999999999
    NOCYCLE
    CACHE 20
    NOORDER;

CREATE SEQUENCE SEND_MESSAGE_SEQ
    START WITH 1000
    INCREMENT By 1
    MINVALUE 1000
    MAXVALUE 9999999999
    NOCYCLE
    CACHE 20
    NOORDER;

    